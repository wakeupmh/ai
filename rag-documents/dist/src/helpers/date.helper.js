"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.writeFullDate = exports.getDaysDiference = exports.getDaysBetween = void 0;
const getDaysBetween = (from, to) => {
    return Math.round(Math.abs(+from - +to) / 8.64e7);
};
exports.getDaysBetween = getDaysBetween;
const getDaysDiference = (from, to) => {
    const daysRemaining = (0, exports.getDaysBetween)(from, to);
    if (new Date(to).getTime() < new Date().getTime()) {
        return -daysRemaining;
    }
    return daysRemaining;
};
exports.getDaysDiference = getDaysDiference;
const writeFullDate = (date, fallback) => {
    if (!date)
        return fallback || '';
    if (!(date instanceof Date)) {
        date = new Date(date);
    }
    return date.toLocaleString(undefined, {
        dateStyle: 'full',
        timeStyle: 'medium',
    });
};
exports.writeFullDate = writeFullDate;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS5oZWxwZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvaGVscGVycy9kYXRlLmhlbHBlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBTyxNQUFNLGNBQWMsR0FBRyxDQUFDLElBQVUsRUFBRSxFQUFRLEVBQUUsRUFBRTtJQUNyRCxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxDQUFBO0FBQ25ELENBQUMsQ0FBQTtBQUZZLFFBQUEsY0FBYyxrQkFFMUI7QUFFTSxNQUFNLGdCQUFnQixHQUFHLENBQUMsSUFBVSxFQUFFLEVBQVEsRUFBRSxFQUFFO0lBQ3ZELE1BQU0sYUFBYSxHQUFHLElBQUEsc0JBQWMsRUFBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUE7SUFDOUMsSUFBSSxJQUFJLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxPQUFPLEVBQUUsR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDLE9BQU8sRUFBRSxFQUFFO1FBQ2pELE9BQU8sQ0FBQyxhQUFhLENBQUE7S0FDdEI7SUFDRCxPQUFPLGFBQWEsQ0FBQTtBQUN0QixDQUFDLENBQUE7QUFOWSxRQUFBLGdCQUFnQixvQkFNNUI7QUFFTSxNQUFNLGFBQWEsR0FBRyxDQUFDLElBQStCLEVBQUUsUUFBaUIsRUFBVSxFQUFFO0lBQzFGLElBQUksQ0FBQyxJQUFJO1FBQUUsT0FBTyxRQUFRLElBQUksRUFBRSxDQUFBO0lBRWhDLElBQUksQ0FBQyxDQUFDLElBQUksWUFBWSxJQUFJLENBQUMsRUFBRTtRQUMzQixJQUFJLEdBQUcsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUE7S0FDdEI7SUFFRCxPQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsU0FBUyxFQUFFO1FBQ3BDLFNBQVMsRUFBRSxNQUFNO1FBQ2pCLFNBQVMsRUFBRSxRQUFRO0tBQ3BCLENBQUMsQ0FBQTtBQUNKLENBQUMsQ0FBQTtBQVhZLFFBQUEsYUFBYSxpQkFXekIiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZ2V0RGF5c0JldHdlZW4gPSAoZnJvbTogRGF0ZSwgdG86IERhdGUpID0+IHtcbiAgcmV0dXJuIE1hdGgucm91bmQoTWF0aC5hYnMoK2Zyb20gLSArdG8pIC8gOC42NGU3KVxufVxuXG5leHBvcnQgY29uc3QgZ2V0RGF5c0RpZmVyZW5jZSA9IChmcm9tOiBEYXRlLCB0bzogRGF0ZSkgPT4ge1xuICBjb25zdCBkYXlzUmVtYWluaW5nID0gZ2V0RGF5c0JldHdlZW4oZnJvbSwgdG8pXG4gIGlmIChuZXcgRGF0ZSh0bykuZ2V0VGltZSgpIDwgbmV3IERhdGUoKS5nZXRUaW1lKCkpIHtcbiAgICByZXR1cm4gLWRheXNSZW1haW5pbmdcbiAgfVxuICByZXR1cm4gZGF5c1JlbWFpbmluZ1xufVxuXG5leHBvcnQgY29uc3Qgd3JpdGVGdWxsRGF0ZSA9IChkYXRlOiBEYXRlIHwgc3RyaW5nIHwgdW5kZWZpbmVkLCBmYWxsYmFjaz86IHN0cmluZyk6IHN0cmluZyA9PiB7XG4gIGlmICghZGF0ZSkgcmV0dXJuIGZhbGxiYWNrIHx8ICcnXG5cbiAgaWYgKCEoZGF0ZSBpbnN0YW5jZW9mIERhdGUpKSB7XG4gICAgZGF0ZSA9IG5ldyBEYXRlKGRhdGUpXG4gIH1cblxuICByZXR1cm4gZGF0ZS50b0xvY2FsZVN0cmluZyh1bmRlZmluZWQsIHtcbiAgICBkYXRlU3R5bGU6ICdmdWxsJyxcbiAgICB0aW1lU3R5bGU6ICdtZWRpdW0nLFxuICB9KVxufVxuIl19